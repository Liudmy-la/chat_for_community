{
  "openapi": "3.0.3",
  "info": {
    "title": "Travel Chat",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://travel-with-pleasure.onrender.com/"
    }
  ],

  "paths": {
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/avatar": {
      "post": {
        "tags": ["Users"],
        "summary": "Set user avatar",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar set successfully"
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/myGroups": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all group chats for a user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's group chats were successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChatsResponse"
                }
              }
            }
          },
          "204": {
            "description": "No chats found for the user"
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid or missing user email or authorization token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/myChats": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all private chats for a user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's private chats were successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPrivateChatsResponse"
                }
              }
            }
          },
          "204": {
            "description": "No private chats found for the user"
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid or missing user email or authorization token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/find": {
      "get": {
        "tags": ["Users"],
        "summary": "Find a user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Nickname"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/createChat": {
      "post": {
        "tags": ["Chats"],
        "summary": "Create a new group chat",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupChatRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chat was successfully created"
          },
          "400": {
            "description": "Invalid request data or chat with this name already exists"
          },
          "401": {
            "description": "Unauthorized, invalid or missing token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/createPrivateChat": {
      "post": {
        "tags": ["Chats"],
        "summary": "Create a new private chat",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrivateChatRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Private Chat successfully created"
          },
          "400": {
            "description": "Invalid request data or chat with this name already exists"
          },
          "401": {
            "description": "Unauthorized, invalid or missing token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "UserPrivateChatsResponse": {
        "type": "object",
        "properties": {
          "userPrivateChats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "d27f4150-6e97-4c70-a0d2-add24dc6dc9d"
                },
                "userIdOne": {
                  "type": "string",
                  "example": "cadbe7c7-edcb-4c7d-8dd3-f365b1714c59"
                },
                "userIdSecond": {
                  "type": "string",
                  "example": "fecf514d-7769-40ec-b2d2-e975eccc2fe0"
                },
                "messageIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "required": ["id", "userIdOne", "userIdSecond", "messageIds"]
            }
          }
        },
        "required": ["userPrivateChats"]
      },
      "UserChatsResponse": {
        "type": "object",
        "properties": {
          "userChats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "string"
                },
                "adminId": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "avatar": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "string"
                  }
                },
                "messageIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "required": [
                "id",
                "adminId",
                "name",
                "avatar",
                "description",
                "userIds",
                "messageIds"
              ]
            }
          }
        },
        "required": ["userChats"]
      },
      "CreateGroupChatRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          }
        },
        "required": ["name", "description"]
      },
      "CreatePrivateChatRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string"
          }
        },
        "required": ["id"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "nickname": {
            "type": "string",
            "example": "nickname"
          },
          "first_name": {
            "type": "string",
            "example": "first_name"
          },
          "last_name": {
            "type": "string",
            "example": "last_name"
          }
        },
        "required": ["email", "password", "nickname", "first_name", "last_name"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": ["email", "password"]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "your-jwt-token"
          }
        }
      },
      "Nickname": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          }
        }
      },
      "DeleteUserRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": ["password"]
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": ["id", "email", "nickname", "first_name", "last_name", "avatar"]
      }
    }
  }
}
